name: Stage 2 CI â€” Ephemeral Staging Deploy, Test, Teardown

on:
  workflow_call:
    inputs:
      image_tag:
        required: true
        type: string

jobs:
  deploy_ephemeral_staging:
    runs-on: ubuntu-latest
    env:
      NS: stg-${{ github.run_id }}

    steps:
      - name: Checkout repo (k8s manifests)
        uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

     
      - name: Get AKS credentials (and verify)
        run: |
          set -e
          az aks get-credentials \
            -g "${{ vars.RESOURCE_GROUP }}" \
            -n "${{ vars.AKS_NAME }}" \
            --overwrite-existing
          echo "Current context:"
          kubectl config current-context
          echo "Cluster nodes:"
          kubectl get nodes

      - name: Create ephemeral namespace
        run: kubectl create ns "$NS"

      - name: Apply manifests to staging namespace
        run: kubectl apply -n "$NS" -f k8s/

      - name: Point deployments to freshly built images
        run: |
          SERVER=$(az acr show -n "${{ secrets.ACR_NAME }}" --query loginServer -o tsv)
          TAG="${{ inputs.image_tag }}"
          kubectl set image -n "$NS" deployment/product-service product=$SERVER/product-service:$TAG
          kubectl set image -n "$NS" deployment/order-service   order=$SERVER/order-service:$TAG

      - name: Wait for rollouts
        run: |
          kubectl rollout status -n "$NS" deployment/product-service --timeout=180s
          kubectl rollout status -n "$NS" deployment/order-service   --timeout=180s

      - name: Smoke test /health
        run: |
          kubectl run curl -n "$NS" --image=curlimages/curl:8.10.1 --restart=Never --rm -i -- \
            sh -lc 'set -e; curl -fsS http://product-service:8001/health; curl -fsS http://order-service:8000/health'

      - name: Tear down staging (always)
        if: always()
        run: |
          # Skip cleanup gracefully if no context (e.g., earlier failure)
          kubectl config current-context >/dev/null 2>&1 || exit 0
          kubectl delete ns "$NS" --ignore-not-found=true --wait=true || true
